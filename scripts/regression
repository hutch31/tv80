#!/usr/bin/env python
# Copyright (c) 2004 Guy Hutchison (ghutchis@opencores.org)
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

import sys, os, getopt

test_list = ["bintr", "blk_mem_inst", "blk_out_inst", "hello", 
             "fib", "otir", "nwtest"]
status = {}

def run_tests (test_list):
    for test_name in test_list:
        #os.system ("scripts/run %s" % test_name)
	os.system ("(cd tests; make %s.ihx)" % test_name)
        os.system ("sc_env/sc_env_top -i tests/%s.ihx | tee logs/%s.log" % (test_name, test_name))

def check_results (test_list):
    print "%-20s %s" % ("Test", "Status")
    for test_name in test_list:
        try:
            testh = open ("logs/%s.log" % test_name, "r")
            status[test_name] = "crashed"
            
            testl = testh.readline()
            while (testl != ''):
                if (testl.find ("TEST PASSED") != -1):
                    status[test_name] = "passed"
                elif (testl.find ("TEST FAILED") != -1):
                    status[test_name] = "failed"
                testl = testh.readline()
        
        except:
            status[test_name] = "no log file"
    
        print "%-20s %s" % (test_name, status[test_name])

def print_help():
    print "Usage: regression [-rch]"
    print "  -r : run regression"
    print "  -c : check results and print report"
    print "  -h : option help (this list)"

(options, args) = getopt.getopt (sys.argv[1:], "rc")

run = 0
check = 0
for option in options:
    if (option[0] == "-r"):
        run = 1
    if (option[0] == "-c"):
        check = 1
    if (option[0] == "-h"):
        print_help()
        sys.exit (0)

if (not run and not check):
    print_help()
    sys.exit(0)

if (run):
    run_tests (test_list)
if (check):
    check_results (test_list)

